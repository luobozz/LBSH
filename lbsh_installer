#!/bin/bash
#命令安装器
SCRIPT_VERSION="1.0.0"
SCRIPT_NAME="lbsh_installer"

INSTALL_SUPPORT_ARR=("lssh")
INSTALL_HOME="./__install_test/bin"
LSSH_INSTALL_HOME="./lssh"

function msg(){
    if [ "$1" == "log" ]
    then
        if [ "$2" == "error" ]
        then
            echo -e "[${SCRIPT_NAME}] $(date '+%Y-%m-%d %H:%M:%S') \e[31mERROR\e[0m: $3" 1>&2
        else
            echo "[${SCRIPT_NAME}] $(date '+%Y-%m-%d %H:%M:%S')  INFO: $2"
        fi
    else
        if [ "$1" == "error" ]
        then
            echo -e "\e[31mERROR:\e[0m $2"
        else
            echo "$*"
        fi
    fi
}

function isContains(){
    narr=($1)
    [[ ${narr[@]/$2/} == ${narr[@]} ]]
    echo $?
}

function installerForLssh(){
    cp "$LSSH_INSTALL_HOME\lssh" "$INSTALL_HOME"
    # msg "lssh"
}

if [ "$1" == "" ] || [ "$1" == "-h" ]
then
    msg "   Usage: $0 [options] [command]"
    msg " "
    msg "   Commands: "
    msg "          i,install        install"
    msg "          u,unstall        unstall"
    msg " "
    msg "   Options: "
    msg "          <default>,-h     Output usage information"
    msg "          -v               Verbose mode"
elif [ "$1" == "i" ]
then
    if [ "$2" == "" ]
    then
        msg "Unable to install empty."
    # elif [ $(isContains "${INSTALL_SUPPORT_ARR[*]}" $2) ==  "0" ]
    #     msg "$2 is not supported for installation."
    elif [ "$2" == "lssh" ]
    then
        installerForLssh
    else
        msg "$2 is not supported for installation."
    fi
elif [ "$1" == "-v" ]
then
    msg "${SCRIPT_NAME} version: v${SCRIPT_VERSION}."
else
    msg "$1 is not supported by ${SCRIPT_NAME}."
fi