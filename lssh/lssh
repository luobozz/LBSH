#!/bin/bash
# ssh增强 用于保存会话快速登录
# 依赖列表
SCRIPT_VERSION="1.0.5"
SCRIPT_NAME="lb-ssh"
LBSH_HOME="$HOME/.lbsh"
LBSH_CONFIG_HOME="$LBSH_HOME/config"
LBSH_LIB_HOME="$LBSH_HOME/lib"

LSSH_CONFIG_HOME="$LBSH_CONFIG_HOME/lssh"
LSSH_CONFIG_REMOTE_LIST="remote_list.config"
LSSH_CONFIG_REMOTE_SCRIPT="lssh/remote.py"

REMOTE_CALLBACK_SPLIT_FLAG="(//s)"

function msg(){
    if [ "$1" == "log" ]
    then
        if [ "$2" == "error" ]
        then
            echo -e "[${SCRIPT_NAME}] $(date '+%Y-%m-%d %H:%M:%S') \e[31mERROR\e[0m: $3" 1>&2
        else
            echo "[${SCRIPT_NAME}] $(date '+%Y-%m-%d %H:%M:%S')  INFO: $2"
        fi
    else
        if [ "$1" == "error" ]
        then
            echo -e "\e[31mERROR:\e[0m $2"
        else
            echo "$*"
        fi
    fi
}

function getUuid(){
    uuid=`uuidgen`
    echo ${uuid//-/}
}

function remote(){
    hdMsg=`python $LBSH_LIB_HOME/$LSSH_CONFIG_REMOTE_SCRIPT -p "$*" -cp $LSSH_CONFIG_HOME/$LSSH_CONFIG_REMOTE_LIST -cbsp $REMOTE_CALLBACK_SPLIT_FLAG`
    msg $hdMsg
}

function remote_cb(){
    hdMsg=`python $LBSH_LIB_HOME/$LSSH_CONFIG_REMOTE_SCRIPT -p "$*" -cp $LSSH_CONFIG_HOME/$LSSH_CONFIG_REMOTE_LIST -cbsp $REMOTE_CALLBACK_SPLIT_FLAG`
    array=(${hdMsg})
    if [ "${array[0]}" == "success" ]; then
        cmd=${array[1]//$REMOTE_CALLBACK_SPLIT_FLAG/ }
        ${cmd}
    else
        msg $hdMsg
    fi
}

if [ "$1" == "" ] || [ "$1" == "-h" ]; then
    msg "   Version: v${SCRIPT_VERSION}"
    msg " "
    msg "   Usage: $0 [options] [command]"
    msg "          $0 use name or ip or id"
    msg " "
    msg "   Repositories: [python,sshpass]"
    msg " "
    msg "   Commands: "
    msg "          ps,ls,list       Output all configured ssh sessions"
    msg "          ad               Add a remote to remote list(only support single cmd now"
    msg "                               -a address,the remote host address"
    msg "                               -p port(default=22,the remote host port"
    msg "                               -u user(default=root,the remote host login name"
    msg "                               -w way(default=pwd,the authentication mode for accessing remote hosts(pwd or pk"
    msg "                               -k key,the key of authentication mode"
    msg "                               -n name(default=\$uuid,the custom name of remote host"
    msg "          ed               Edit a remote in remote list(search with uuid or name likes [lssh ed uuid/name (-n name ...editArgs)]"
    msg "          rm               Remove a remote from remote list(search with uuid or name"
    msg "          cp               Cp locate file to remote(rely on scp"
    msg "          cn,conn          Connecting a ssh session(rely on ssh"
    msg " "
    msg "   Options: "
    msg "          <default>,-h     Output usage information"
    msg "          -v               Verbose mode"
    elif [ "$1" == "ps" ] || [ "$1" == "ls" ] || [ "$1" == "list" ]; then
    printf "%-8s %-14s %-6s %-5s %-30s %-38s %-15s\n" USER "IP ADDR" PORT WAY PWD UUID NAME
    awk '{printf "%-8s %-14s %-6s %-5s %-30s %-38s %-15s\n",$4,$2,$3,$5,$6,$1,$7}' $LSSH_CONFIG_HOME/$LSSH_CONFIG_REMOTE_LIST
    elif [ "$1" == "ed" ]; then
    remote $*
    elif [ "$1" == "rm" ]; then
    remote $*
    elif [ "$1" == "cp" ]; then
    remote_cb $*
    elif [ "$1" == "cn" ] || [ "$1" == "conn" ]; then
    remote_cb $*
    elif [ "$1" == "ad" ]; then
    remote $*
    elif [ "$1" == "-v" ]; then
    msg "${SCRIPT_VERSION}"
else
    msg "$1 is not supported by ${SCRIPT_NAME}."
fi

# sshpass -p '123456' ssh shtf@192.168.1.46
